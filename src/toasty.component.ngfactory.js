/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('./toasty.component');
var import1 = require('@angular/core/src/change_detection/change_detection_util');
var import2 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/view_utils');
var import5 = require('@angular/core/src/metadata/view');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/change_detection/constants');
var import8 = require('@angular/core/src/linker/component_factory');
var import9 = require('./toasty.service');
var import10 = require('../node_modules/@angular/common/src/directives/ng_class.ngfactory');
var import11 = require('@angular/core/src/linker/view_container');
var import12 = require('../node_modules/@angular/common/src/directives/ng_for.ngfactory');
var import13 = require('@angular/core/src/change_detection/differs/iterable_differs');
var import14 = require('@angular/core/src/change_detection/differs/keyvalue_differs');
var import15 = require('@angular/core/src/linker/element_ref');
var import16 = require('@angular/core/src/linker/template_ref');
var import17 = require('@angular/common/src/directives/ng_for');
var import18 = require('@angular/common/src/directives/ng_class');
var import19 = require('./toast.component');
var import20 = require('./toast.component.ngfactory');
var Wrapper_ToastyComponent = (function () {
    function Wrapper_ToastyComponent(p0, p1) {
        this._changed = false;
        this.context = new import0.ToastyComponent(p0, p1);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_ToastyComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ToastyComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_ToastyComponent.prototype.check_position = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.position = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ToastyComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_ToastyComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ToastyComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ToastyComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ToastyComponent;
}());
exports.Wrapper_ToastyComponent = Wrapper_ToastyComponent;
var renderType_ToastyComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_ToastyComponent_Host0 = (function (_super) {
    __extends(View_ToastyComponent_Host0, _super);
    function View_ToastyComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ToastyComponent_Host0, renderType_ToastyComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways);
    }
    View_ToastyComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ng2-toasty', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ToastyComponent0(this.viewUtils, this, 0, this._el_0);
        this._ToastyComponent_0_3 = new Wrapper_ToastyComponent(this.injectorGet(import9.ToastyConfig, this.parentIndex), this.injectorGet(import9.ToastyService, this.parentIndex));
        this.compView_0.create(this._ToastyComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._ToastyComponent_0_3.context);
    };
    View_ToastyComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ToastyComponent) && (0 === requestNodeIndex))) {
            return this._ToastyComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_ToastyComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ToastyComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_ToastyComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_ToastyComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ToastyComponent_Host0;
}(import2.AppView));
exports.ToastyComponentNgFactory = new import8.ComponentFactory('ng2-toasty', View_ToastyComponent_Host0, import0.ToastyComponent);
var styles_ToastyComponent = [];
var renderType_ToastyComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_ToastyComponent, {});
var View_ToastyComponent0 = (function (_super) {
    __extends(View_ToastyComponent0, _super);
    function View_ToastyComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ToastyComponent0, renderType_ToastyComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways);
        this._arr_9 = import3.pureProxy1(function (p0) {
            return [p0];
        });
    }
    View_ToastyComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'id', 'toasty'), null);
        this._NgClass_1_3 = new import10.Wrapper_NgClass(this.parentView.injectorGet(import13.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import14.KeyValueDiffers, this.parentIndex), new import15.ElementRef(this._el_1), this.renderer);
        this._text_2 = this.renderer.createText(this._el_1, '\n        ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import11.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import16.TemplateRef_(this, 3, this._anchor_3);
        this._NgFor_3_6 = new import12.Wrapper_NgFor(this._vc_3.vcRef, this._TemplateRef_3_5, this.parentView.injectorGet(import13.IterableDiffers, this.parentIndex), this.ref);
        this._text_4 = this.renderer.createText(this._el_1, '\n    ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4
        ]), null);
        return null;
    };
    View_ToastyComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import17.NgFor) && (3 === requestNodeIndex))) {
            return this._NgFor_3_6.context;
        }
        if (((token === import18.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._NgClass_1_3.context;
        }
        return notFoundResult;
    };
    View_ToastyComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1_0_0 = this._arr_9(this.context.position);
        this._NgClass_1_3.check_ngClass(currVal_1_0_0, throwOnChange, false);
        this._NgClass_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        var currVal_3_0_0 = this.context.toasts;
        this._NgFor_3_6.check_ngForOf(currVal_3_0_0, throwOnChange, false);
        this._NgFor_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
    };
    View_ToastyComponent0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
    };
    View_ToastyComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_ToastyComponent1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        return null;
    };
    return View_ToastyComponent0;
}(import2.AppView));
exports.View_ToastyComponent0 = View_ToastyComponent0;
var View_ToastyComponent1 = (function (_super) {
    __extends(View_ToastyComponent1, _super);
    function View_ToastyComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_ToastyComponent1, renderType_ToastyComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
    }
    View_ToastyComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'ng2-toast', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_0 = new import20.View_ToastComponent0(this.viewUtils, this, 0, this._el_0);
        this._ToastComponent_0_3 = new import20.Wrapper_ToastComponent();
        this.compView_0.create(this._ToastComponent_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'closeToast', null), this.eventHandler(this.handleEvent_0));
        this._ToastComponent_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_ToastyComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import19.ToastComponent) && (0 === requestNodeIndex))) {
            return this._ToastComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_ToastyComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._ToastComponent_0_3.check_toast(currVal_0_0_0, throwOnChange, false);
        this._ToastComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_ToastyComponent1.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._ToastComponent_0_3.ngOnDestroy();
    };
    View_ToastyComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_ToastyComponent1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'closeToast')) {
            var pd_sub_0 = (this.parentView.context.closeToast(this.context.$implicit) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_ToastyComponent1;
}(import2.AppView));
